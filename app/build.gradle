apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion androidConfiguration.compileSdkVersion
    defaultConfig {
        applicationId "com.io.ansible"
        minSdkVersion androidConfiguration.minSdkVersion
        targetSdkVersion androidConfiguration.targetSdkVersion
        versionCode androidConfiguration.versionCode
        versionName androidConfiguration.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "AUTHORIZATION", AUTHORIZATION)
            buildConfigField("String", "API_BASE_URL", DEV_API_BASE_URL)
        }
    }

    sourceSets {
        main.res.srcDirs = [
                'src/main/res/layouts/home',
                'src/main/res/layouts/signin',

                'src/main/res/mipmaps',
                'src/main/res/drawables',
                'src/main/res/layouts',
                'src/main/res'
        ]
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /**
     * Kotlin libraries
     */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$dependencyVersions.kotlin_coroutines"
    implementation "androidx.core:core-ktx:$dependencyVersions.ktx"

    /**
     * Support libraries
     */
    implementation "com.android.support:support-compat:$dependencyVersions.support"
    implementation "com.android.support:support-fragment:$dependencyVersions.support"
    implementation "com.android.support:appcompat-v7:$dependencyVersions.support"
    implementation "com.android.support:design:$dependencyVersions.support"
    implementation "com.android.support.constraint:constraint-layout:$dependencyVersions.supportConstraintLayout"

    /**
     * Lifecycle
     */
    implementation "android.arch.lifecycle:extensions:$dependencyVersions.lifecycle"
    kapt "android.arch.lifecycle:compiler:$dependencyVersions.lifecycle"

    /**
     * Room
     */
    implementation "android.arch.persistence.room:runtime:$dependencyVersions.room"
    implementation "android.arch.persistence.room:rxjava2:$dependencyVersions.roomRxJava2"
    kapt "android.arch.persistence.room:compiler:$dependencyVersions.room"

    /**
     * RxJava
     */
    implementation "io.reactivex.rxjava2:rxjava:$dependencyVersions.rxJava2"
    implementation "io.reactivex.rxjava2:rxandroid:$dependencyVersions.rxAndroid"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$dependencyVersions.rxPreferences"

    /**
     * Network
     */
    implementation "com.squareup.retrofit2:retrofit:$dependencyVersions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$dependencyVersions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$dependencyVersions.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$dependencyVersions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$dependencyVersions.okhttp"

    /**
     * Picasso
     */
    implementation "com.squareup.picasso:picasso:$dependencyVersions.picasso"

    /**
     * Injection
     */
    implementation "com.google.dagger:dagger:$dependencyVersions.dagger"
    implementation "com.google.dagger:dagger-android:$dependencyVersions.dagger"
    implementation "com.google.dagger:dagger-android-support:$dependencyVersions.dagger"
    kapt "com.google.dagger:dagger-compiler:$dependencyVersions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$dependencyVersions.dagger"

    /**
     * Json Parser
     */
    implementation "com.google.code.gson:gson:$dependencyVersions.gson"

    /**
     * Facebook
     */
    implementation "com.facebook.android:facebook-android-sdk:$dependencyVersions.facebook"

    /**
     * Smack
     */
    implementation "org.igniterealtime.smack:smack-android-extensions:$dependencyVersions.smack"
    implementation "org.igniterealtime.smack:smack-tcp:$dependencyVersions.smack"

    /**
     * Testing
     */
    testImplementation "junit:junit:$dependencyVersions.junit"
    testImplementation "org.mockito:mockito-core:$dependencyVersions.mockito"
    testImplementation "org.mockito:mockito-inline:$dependencyVersions.mockito"
    testImplementation "org.powermock:powermock-api-mockito2:$dependencyVersions.powermock"
    testImplementation "org.powermock:powermock-module-junit4:$dependencyVersions.powermock"
    androidTestImplementation "com.android.support.test:runner:$dependencyVersions.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$dependencyVersions.espresso"
}
